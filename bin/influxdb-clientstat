#!/bin/bash


set -eu

SCRIPT_HELP="Usage:
influxdb-clientstat

Предполагается запуск через telegraf, плагин exec:

/etc/telegraf/telegraf.conf:
[[inputs.exec]]
    commands = [\"/usr/local/bin/influxdb-clientstat\"]
    data_format = \"influx\"

/etc/nginx/nginx.conf:
log_format combined_host '\$host \$remote_addr - \$remote_user [\$time_local] \"\$request\" \$status \$body_bytes_sent \"\$http_referer\" \"\$http_user_agent\"';

/etc/nginx/sites-enabled/site.conf:
location /clientstat {
    return 204;
    access_log /var/log/nginx/clientstat.access.log combined_host;
}
"

. /usr/share/server-scripts/lib/init
use_config_var "INFLUXDB_CLIENTSTAT_LOG_FILE" "/var/log/nginx/clientstat.access.log"

measurement="page_load"
metrics="request first_paint dom_ready init_dom_tree load"
value_max=30000

logfile_in="$INFLUXDB_CLIENTSTAT_LOG_FILE"
logfile_out="/var/log/telegraf/clientstat.log"
tmpfile="/tmp/clientstat_last"


save_last_pos() {
	echo "$logsize" > "$tmpfile"
	chmod 600 "$tmpfile"
}

is_int() {
	if [ -n "$(echo "$1" | grep -xE '[0-9]+')" ]; then
		echo 1
	fi
}

out_metric() {
	name="$2"
	if [ "$name" = "page" ]; then
		value="$(echo "$1" | grep -oE "$name=[%a-zA-Z0-9\*\-]*" | cut -d'=' -f2)"
		value="$(echo "$value" | sed 's,[& ]$,,g' | sed 's,%2F,/,g')"
	else
		value="$(echo "$1" | grep -o "$name=-*[0-9]*" | cut -d'=' -f2)"
	fi
	if [ -n "$value" ]; then
		echo "$name=$value"
	fi
}

main() {
	logsize="$(wc -l "$logfile_in" | awk '{print $1}')"

	if [ ! -e "$tmpfile" ]; then
		> "$tmpfile"
	fi

	if [ ! -r "$logfile_in" ]; then
		echo "$logfile_in not readable"
		exit 2
	fi

	if [ ! -w "$tmpfile" ]; then
		echo "$tmpfile not writable"
		exit 3
	fi

	if [ -f "$tmpfile" ]; then
		last_pos="$(cat "$tmpfile")"
	else
		save_last_pos
		exit 0
	fi

	if [ "$logsize" = "$last_pos" ]; then
		exit 0
	fi

	if [ -z "$(is_int "$last_pos")" ] || [ "$logsize" -lt "$last_pos" ]; then
		last_pos=0
	fi

	save_last_pos

	IFS=$'\n'
	for line in $(tail -n +${last_pos} "$logfile_in" | head -n 100); do
		domain="$(echo "$line" | cut -d' ' -f1  | tr '[:upper:]' '[:lower:]' | idn -u --quiet)"
		args="$(echo "$line" | awk '{print $8}' | cut -d'?' -f2)"
		time="$(echo "$line" | grep -oE '\[.*?\]')"
		code="$(echo "$line" | cut -d' ' -f10)"
		timestamp="$(date -d "$(echo "$time" | tr -d '[]' | sed -e 's,/,-,g' -e 's,:, ,')" +"%s")"
		str="$measurement,domain=$domain,$(out_metric "$args" page) "
		connect="$(out_metric "$args" connect)"

		if [ "$connect" = "connect=-1" ]; then
			# connect=0 need for count requests
			str="${str}connect=0"
		else
			str="$str$connect"
			IFS=$' '
			for metric in $metrics; do
				value="$(out_metric "$args" "$metric")"
				if [ -n "$value" ] && [ "$(echo "$value" | grep -c "$metric=-")" = 0 ]; then
					if [ "$(echo "$value" | grep -o "[0-9]*")" -ge "$value_max" ]; then
						value="$metric=$value_max"
					fi
					str="$str,$value"
				fi
			done
		fi

		if [ -n "$str" ]; then
			str="$str ${timestamp}$(date +'%N')"
			echo "$str"
			echo "$str" >> "$logfile_out"
		fi
	done
}

main "$@"
