#!/bin/bash
readonly PROGRAM_NAME="server-scripts"
readonly PROGRAM_VERSION="0.2.18"
readonly BATS_TEST_RESULTS_DIR="/tmp/$PROGRAM_NAME"

is_test() {
	[ -n "${BATS_TEST:-""}" ] && [ "$BATS_TEST" != 0 ]
}

if is_test; then
	. "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/../$PROGRAM_NAME.conf.example"
else
	[ -r "/etc/$PROGRAM_NAME.conf" ] && . "/etc/$PROGRAM_NAME.conf"
	[ -r "$HOME/.$PROGRAM_NAME.conf" ] && . "$HOME/.$PROGRAM_NAME.conf"
fi

usage() {
	version="$(grep '# \?v[0-9.]\+' -o $0 | tr -d '# ')"
	script_name="$(basename $0)"
	if [ "$script_name" != "init" ]; then
		echo "$script_name $version"
		if [ -n "$SCRIPT_HELP" ]; then
			echo "$SCRIPT_HELP" | sed "s/{0}/${script_name}/g"
		fi
		echo "Part of $PROGRAM_NAME $PROGRAM_VERSION"
	else
		echo >&2 "$PROGRAM_NAME $PROGRAM_VERSION"
	fi
}

use_config_var() {
	var_name="${1:-""}"
	default_val="${2:-""}"
	var_val="$(eval "echo \${$var_name:-"$default_val"}")"
	eval "$var_name=\"$var_val\""
	#echo "use_config_var: $1 = $var_val"

	# replace pathes to test
	if is_test && [ "$(echo "$var_val" | head -c 1)" = "/" ]; then
		var_val="${BATS_TEST_RESULTS_DIR}${var_val}"
		eval "$var_name=\"$var_val\""
	fi
}

while getopts ":y" opt; do
	case "$opt" in
		#f) SCRIPT_FORCE="1"
		#;;
		#n) SCRIPT_ASSUME_NO="1"
		#;;
		#s) SCRIPT_SIMULATE="1"
		#;;
		#v) SCRIPT_VERBOSE="1"
		#;;
		y) SCRIPT_ASSUME_YES="1"
		;;
	esac
done

if [ "${1:-""}" = "--help" ] && ([ "$(basename $0)" = "init" ] || [ -n "$SCRIPT_HELP" ]); then
	usage
	exit 1
fi

shift $((OPTIND - 1))
